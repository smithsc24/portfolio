{"version":3,"file":"static/js/2359.6b41b4e3.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/panel/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/panel/panel.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/panel/panel.scss?tag=calcite-panel&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/flow-item/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/flow-item/flow-item.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/flow-item/flow-item.scss?tag=calcite-flow-item&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.scss?tag=calcite-scrim&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  actionBarContainer: \"action-bar-container\",\n  backButton: \"back-button\",\n  container: \"container\",\n  header: \"header\",\n  headerContainer: \"header-container\",\n  headerContainerBorderEnd: \"header-container--border-end\",\n  heading: \"heading\",\n  summary: \"summary\",\n  description: \"description\",\n  headerContent: \"header-content\",\n  headerActions: \"header-actions\",\n  headerActionsEnd: \"header-actions--end\",\n  headerActionsStart: \"header-actions--start\",\n  contentWrapper: \"content-wrapper\",\n  fabContainer: \"fab-container\",\n  footer: \"footer\",\n};\n\nexport const ICONS = {\n  close: \"x\",\n  menu: \"ellipsis\",\n  backLeft: \"chevron-left\",\n  backRight: \"chevron-right\",\n  expand: \"chevron-down\",\n  collapse: \"chevron-up\",\n};\n\nexport const SLOTS = {\n  actionBar: \"action-bar\",\n  headerActionsStart: \"header-actions-start\",\n  headerActionsEnd: \"header-actions-end\",\n  headerMenuActions: \"header-menu-actions\",\n  headerContent: \"header-content\",\n  fab: \"fab\",\n  footer: \"footer\",\n  footerActions: \"footer-actions\",\n};\n\nexport const HEADING_LEVEL = 3;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  focusFirstTabbable,\n  slotChangeGetAssignedElements,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport { PanelMessages } from \"./assets/panel/t9n\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding custom content.\n * @slot action-bar - A slot for adding a `calcite-action-bar` to the component.\n * @slot header-actions-start - A slot for adding actions or content to the start side of the header.\n * @slot header-actions-end - A slot for adding actions or content to the end side of the header.\n * @slot header-content - A slot for adding custom content to the header.\n * @slot header-menu-actions - A slot for adding an overflow menu with actions inside a `calcite-dropdown`.\n * @slot fab - A slot for adding a `calcite-fab` (floating action button) to perform an action.\n * @slot footer-actions - [Deprecated] Use the `\"footer\"` slot instead. A slot for adding `calcite-button`s to the component's footer.\n * @slot footer - A slot for adding custom content to the footer.\n */\n@Component({\n  tag: \"calcite-panel\",\n  styleUrl: \"panel.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Panel\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** When `true`, the component will be hidden. */\n  @Prop({ mutable: true, reflect: true }) closed = false;\n\n  /**\n   *  When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** When `true`, displays a close button in the trailing side of the header. */\n  @Prop({ reflect: true }) closable = false;\n\n  /**\n   * When `true`, hides the component's content area.\n   */\n  @Prop({ reflect: true }) collapsed = false;\n\n  /**\n   * Specifies the direction of the collapse.\n   *\n   * @internal\n   */\n  @Prop() collapseDirection: \"down\" | \"up\" = \"down\";\n\n  /**\n   * When `true`, the component is collapsible.\n   */\n  @Prop({ reflect: true }) collapsible = false;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /** A description for the component. */\n  @Prop() description: string;\n\n  /**\n   * When `true`, the action menu items in the `header-menu-actions` slot are open.\n   */\n  @Prop({ reflect: true }) menuOpen = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PanelMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PanelMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePanelElement;\n\n  containerEl: HTMLElement;\n\n  panelScrollEl: HTMLElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.resizeHandler());\n\n  @State() hasStartActions = false;\n\n  @State() hasEndActions = false;\n\n  @State() hasMenuItems = false;\n\n  @State() hasHeaderContent = false;\n\n  @State() hasActionBar = false;\n\n  @State() hasFooterContent = false;\n\n  @State() hasFooterActions = false;\n\n  @State() hasFab = false;\n\n  @State() defaultMessages: PanelMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @State() showHeaderContent = false;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calcitePanelClose: EventEmitter<void>;\n\n  /**\n   * Fires when the collapse button is clicked.\n   */\n  @Event({ cancelable: false }) calcitePanelToggle: EventEmitter<void>;\n\n  /**\n   * Fires when the content is scrolled.\n   */\n  @Event({ cancelable: false }) calcitePanelScroll: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  resizeHandler = (): void => {\n    const { panelScrollEl } = this;\n\n    if (\n      !panelScrollEl ||\n      typeof panelScrollEl.scrollHeight !== \"number\" ||\n      typeof panelScrollEl.offsetHeight !== \"number\"\n    ) {\n      return;\n    }\n\n    panelScrollEl.tabIndex = panelScrollEl.scrollHeight > panelScrollEl.offsetHeight ? 0 : -1;\n  };\n\n  setContainerRef = (node: HTMLElement): void => {\n    this.containerEl = node;\n  };\n\n  panelKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.closable && event.key === \"Escape\" && !event.defaultPrevented) {\n      this.close();\n      event.preventDefault();\n    }\n  };\n\n  close = (): void => {\n    this.closed = true;\n    this.calcitePanelClose.emit();\n  };\n\n  collapse = (): void => {\n    this.collapsed = !this.collapsed;\n    this.calcitePanelToggle.emit();\n  };\n\n  panelScrollHandler = (): void => {\n    this.calcitePanelScroll.emit();\n  };\n\n  handleHeaderActionsStartSlotChange = (event: Event): void => {\n    this.hasStartActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleHeaderActionsEndSlotChange = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleHeaderMenuActionsSlotChange = (event: Event): void => {\n    this.hasMenuItems = slotChangeHasAssignedElement(event);\n  };\n\n  handleActionBarSlotChange = (event: Event): void => {\n    const actionBars = slotChangeGetAssignedElements(event).filter((el) =>\n      el?.matches(\"calcite-action-bar\"),\n    ) as HTMLCalciteActionBarElement[];\n\n    actionBars.forEach((actionBar) => (actionBar.layout = \"horizontal\"));\n\n    this.hasActionBar = !!actionBars.length;\n  };\n\n  handleHeaderContentSlotChange = (event: Event): void => {\n    this.hasHeaderContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterSlotChange = (event: Event): void => {\n    this.hasFooterContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterActionsSlotChange = (event: Event): void => {\n    this.hasFooterActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleFabSlotChange = (event: Event): void => {\n    this.hasFab = slotChangeHasAssignedElement(event);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.containerEl);\n  }\n\n  /**\n   * Scrolls the component's content to a specified set of coordinates.\n   *\n   * @example\n   * myCalciteFlowItem.scrollContentTo({\n   *   left: 0, // Specifies the number of pixels along the X axis to scroll the window or element.\n   *   top: 0, // Specifies the number of pixels along the Y axis to scroll the window or element\n   *   behavior: \"auto\" // Specifies whether the scrolling should animate smoothly (smooth), or happen instantly in a single jump (auto, the default value).\n   * });\n   * @param options - allows specific coordinates to be defined.\n   * @returns - promise that resolves once the content is scrolled to.\n   */\n  @Method()\n  async scrollContentTo(options?: ScrollToOptions): Promise<void> {\n    this.panelScrollEl?.scrollTo(options);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderHeaderContent(): VNode {\n    const { heading, headingLevel, description, hasHeaderContent } = this;\n    const headingNode = heading ? (\n      <Heading class={CSS.heading} level={headingLevel}>\n        {heading}\n      </Heading>\n    ) : null;\n\n    const descriptionNode = description ? <span class={CSS.description}>{description}</span> : null;\n\n    return !hasHeaderContent && (headingNode || descriptionNode) ? (\n      <div class={CSS.headerContent} key=\"header-content\">\n        {headingNode}\n        {descriptionNode}\n      </div>\n    ) : null;\n  }\n\n  renderActionBar(): VNode {\n    return (\n      <div class={CSS.actionBarContainer} hidden={!this.hasActionBar}>\n        <slot name={SLOTS.actionBar} onSlotchange={this.handleActionBarSlotChange} />\n      </div>\n    );\n  }\n\n  renderHeaderSlottedContent(): VNode {\n    return (\n      <div class={CSS.headerContent} hidden={!this.hasHeaderContent} key=\"slotted-header-content\">\n        <slot name={SLOTS.headerContent} onSlotchange={this.handleHeaderContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderHeaderStartActions(): VNode {\n    const { hasStartActions } = this;\n\n    return (\n      <div\n        class={{ [CSS.headerActionsStart]: true, [CSS.headerActions]: true }}\n        hidden={!hasStartActions}\n        key=\"header-actions-start\"\n      >\n        <slot\n          name={SLOTS.headerActionsStart}\n          onSlotchange={this.handleHeaderActionsStartSlotChange}\n        />\n      </div>\n    );\n  }\n\n  renderHeaderActionsEnd(): VNode {\n    const {\n      hasEndActions,\n      messages,\n      closable,\n      collapsed,\n      collapseDirection,\n      collapsible,\n      hasMenuItems,\n    } = this;\n    const { collapse, expand, close } = messages;\n\n    const icons = [ICONS.expand, ICONS.collapse];\n\n    if (collapseDirection === \"up\") {\n      icons.reverse();\n    }\n\n    const collapseNode = collapsible ? (\n      <calcite-action\n        aria-expanded={toAriaBoolean(!collapsed)}\n        aria-label={collapse}\n        data-test=\"collapse\"\n        icon={collapsed ? icons[0] : icons[1]}\n        onClick={this.collapse}\n        text={collapse}\n        title={collapsed ? expand : collapse}\n      />\n    ) : null;\n\n    const closeNode = closable ? (\n      <calcite-action\n        aria-label={close}\n        data-test=\"close\"\n        icon={ICONS.close}\n        onClick={this.close}\n        text={close}\n        title={close}\n      />\n    ) : null;\n\n    const slotNode = (\n      <slot name={SLOTS.headerActionsEnd} onSlotchange={this.handleHeaderActionsEndSlotChange} />\n    );\n\n    const showContainer = hasEndActions || collapseNode || closeNode || hasMenuItems;\n\n    return (\n      <div\n        class={{ [CSS.headerActionsEnd]: true, [CSS.headerActions]: true }}\n        hidden={!showContainer}\n        key=\"header-actions-end\"\n      >\n        {slotNode}\n        {this.renderMenu()}\n        {collapseNode}\n        {closeNode}\n      </div>\n    );\n  }\n\n  renderMenu(): VNode {\n    const { hasMenuItems, messages, menuOpen } = this;\n\n    return (\n      <calcite-action-menu\n        flipPlacements={[\"top\", \"bottom\"]}\n        hidden={!hasMenuItems}\n        key=\"menu\"\n        label={messages.options}\n        open={menuOpen}\n        overlayPositioning={this.overlayPositioning}\n        placement=\"bottom-end\"\n      >\n        <calcite-action\n          icon={ICONS.menu}\n          slot={ACTION_MENU_SLOTS.trigger}\n          text={messages.options}\n        />\n        <slot\n          name={SLOTS.headerMenuActions}\n          onSlotchange={this.handleHeaderMenuActionsSlotChange}\n        />\n      </calcite-action-menu>\n    );\n  }\n\n  renderHeaderNode(): VNode {\n    const {\n      hasHeaderContent,\n      hasStartActions,\n      hasEndActions,\n      closable,\n      collapsible,\n      hasMenuItems,\n      hasActionBar,\n    } = this;\n\n    const headerContentNode = this.renderHeaderContent();\n\n    const showHeaderContent =\n      hasHeaderContent ||\n      !!headerContentNode ||\n      hasStartActions ||\n      hasEndActions ||\n      collapsible ||\n      closable ||\n      hasMenuItems;\n\n    this.showHeaderContent = showHeaderContent;\n\n    return (\n      <header class={CSS.header} hidden={!(showHeaderContent || hasActionBar)}>\n        <div\n          class={{ [CSS.headerContainer]: true, [CSS.headerContainerBorderEnd]: hasActionBar }}\n          hidden={!showHeaderContent}\n        >\n          {this.renderHeaderStartActions()}\n          {this.renderHeaderSlottedContent()}\n          {headerContentNode}\n          {this.renderHeaderActionsEnd()}\n        </div>\n        {this.renderActionBar()}\n      </header>\n    );\n  }\n\n  renderFooterNode(): VNode {\n    const { hasFooterContent, hasFooterActions } = this;\n\n    const showFooter = hasFooterContent || hasFooterActions;\n\n    return (\n      <footer class={CSS.footer} hidden={!showFooter}>\n        <slot key=\"footer-slot\" name={SLOTS.footer} onSlotchange={this.handleFooterSlotChange} />\n        <slot\n          key=\"footer-actions-slot\"\n          name={SLOTS.footerActions}\n          onSlotchange={this.handleFooterActionsSlotChange}\n        />\n      </footer>\n    );\n  }\n\n  setPanelScrollEl = (el: HTMLElement): void => {\n    this.panelScrollEl = el;\n    this.resizeObserver?.disconnect();\n\n    if (el) {\n      this.resizeObserver?.observe(el);\n      this.resizeHandler();\n    }\n  };\n\n  renderContent(): VNode {\n    return (\n      <div\n        class={CSS.contentWrapper}\n        hidden={this.collapsible && this.collapsed}\n        onScroll={this.panelScrollHandler}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.setPanelScrollEl}\n      >\n        <slot />\n        {this.renderFab()}\n      </div>\n    );\n  }\n\n  renderFab(): VNode {\n    return (\n      <div class={CSS.fabContainer} hidden={!this.hasFab}>\n        <slot name={SLOTS.fab} onSlotchange={this.handleFabSlotChange} />\n      </div>\n    );\n  }\n\n  render(): VNode {\n    const { disabled, loading, panelKeyDownHandler, closed, closable } = this;\n\n    const panelNode = (\n      <article\n        aria-busy={toAriaBoolean(loading)}\n        class={CSS.container}\n        hidden={closed}\n        tabIndex={closable ? 0 : -1}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.setContainerRef}\n      >\n        {this.renderHeaderNode()}\n        {this.renderContent()}\n        {this.renderFooterNode()}\n      </article>\n    );\n\n    return (\n      <Host onKeyDown={panelKeyDownHandler}>\n        <InteractiveContainer disabled={disabled}>\n          {loading ? <calcite-scrim loading={loading} /> : null}\n          {panelNode}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-panel-footer-padding: Specifies the padding of the component's footer.\n * @prop --calcite-panel-header-border-block-end: Specifies the component header's block end border.\n */\n\n:host {\n  @extend %component-host;\n  @apply relative flex w-full h-full flex-auto overflow-hidden;\n\n  --calcite-min-header-height: calc(var(--calcite-icon-size) * 3);\n}\n\n@include disabled();\n\n@import \"../../assets/styles/header\";\n\n.container {\n  @apply bg-background m-0 flex w-full flex-auto flex-col items-stretch p-0;\n\n  transition:\n    max-block-size var(--calcite-animation-timing),\n    inline-size var(--calcite-animation-timing);\n}\n\n.container[hidden] {\n  @apply hidden;\n}\n\n.header {\n  @apply bg-foreground-1 flex flex-col\n    z-header;\n  border-block-end: var(--calcite-panel-header-border-block-end, 1px solid var(--calcite-color-border-3));\n}\n\n.header-container {\n  @apply flex flex-row w-full\n  items-stretch\n  justify-start;\n  flex: 0 0 auto;\n}\n\n.header-container--border-end {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n.action-bar-container {\n  @apply w-full;\n}\n\n.action-bar-container ::slotted(calcite-action-bar) {\n  @apply w-full;\n}\n\n.header-content {\n  @apply flex\n    flex-col\n    overflow-hidden\n    px-3\n    py-3.5;\n  margin-inline-end: auto;\n  .heading,\n  .description {\n    @apply block\n      break-words\n      p-0;\n  }\n  .heading {\n    @apply text-0h mx-0 mt-0 mb-1 font-medium;\n    &:only-child {\n      @apply mb-0;\n    }\n  }\n  .description {\n    @apply text-color-2 text-n1h;\n  }\n}\n\n.back-button {\n  @apply border-color-3\n  border-0\n  border-solid;\n  border-inline-end-width: theme(\"borderWidth.DEFAULT\");\n}\n\n.header-actions {\n  @apply flex\n  flex-row\n  flex-nowrap\n  items-stretch;\n}\n\n.header-actions--end {\n  margin-inline-start: theme(\"margin.auto\");\n}\n\n.content-wrapper {\n  @apply flex\n  flex-auto\n  flex-col\n  flex-nowrap\n  items-stretch\n  bg-background\n  overflow-auto\n  h-full;\n}\n\n.footer {\n  @apply bg-foreground-1\n  flex\n  w-full\n  justify-evenly;\n\n  flex: 0 0 auto;\n  padding: var(--calcite-panel-footer-padding, theme(\"spacing.2\"));\n  border-block-start: 1px solid var(--calcite-color-border-3);\n}\n\n.fab-container {\n  @apply sticky\n  bottom-0\n  my-0\n  mx-auto\n  block\n  p-2\n  z-sticky;\n  inset-inline: 0;\n  inline-size: fit-content;\n}\n\n@include base-component();\n","export const CSS = {\n  backButton: \"back-button\",\n};\n\nexport const ICONS = {\n  backLeft: \"chevron-left\",\n  backRight: \"chevron-right\",\n};\n\nexport const SLOTS = {\n  actionBar: \"action-bar\",\n  headerActionsStart: \"header-actions-start\",\n  headerActionsEnd: \"header-actions-end\",\n  headerMenuActions: \"header-menu-actions\",\n  headerContent: \"header-content\",\n  fab: \"fab\",\n  footer: \"footer\",\n  footerActions: \"footer-actions\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport { SLOTS as PANEL_SLOTS } from \"../panel/resources\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport { FlowItemMessages } from \"./assets/flow-item/t9n\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding custom content.\n * @slot action-bar - A slot for adding a `calcite-action-bar` to the component.\n * @slot header-actions-start - A slot for adding `calcite-action`s or content to the start side of the component's header.\n * @slot header-actions-end - A slot for adding `calcite-action`s or content to the end side of the component's header.\n * @slot header-content - A slot for adding custom content to the component's header.\n * @slot header-menu-actions - A slot for adding an overflow menu with `calcite-action`s inside a `calcite-dropdown`.\n * @slot fab - A slot for adding a `calcite-fab` (floating action button) to perform an action.\n * @slot footer-actions - [Deprecated] Use the `\"footer\"` slot instead. A slot for adding `calcite-button`s to the component's footer.\n * @slot footer - A slot for adding custom content to the component's footer.\n */\n@Component({\n  tag: \"calcite-flow-item\",\n  styleUrl: \"flow-item.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class FlowItem\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** When `true`, displays a close button in the trailing side of the component's header. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** When `true`, the component will be hidden. */\n  @Prop({ reflect: true }) closed = false;\n\n  /**\n   * When `true`, hides the component's content area.\n   */\n  @Prop({ reflect: true }) collapsed = false;\n\n  /**\n   * Specifies the direction of the collapse.\n   *\n   * @internal\n   */\n  @Prop() collapseDirection: \"down\" | \"up\" = \"down\";\n\n  /**\n   * When `true`, the component is collapsible.\n   */\n  @Prop({ reflect: true }) collapsible = false;\n\n  /**\n   * When provided, the method will be called before it is removed from its parent `calcite-flow`.\n   */\n  @Prop() beforeBack: () => Promise<void>;\n\n  /** A description for the component. */\n  @Prop() description: string;\n\n  /**\n   *  When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * When `true`, the action menu items in the `header-menu-actions` slot are open.\n   */\n  @Prop({ reflect: true }) menuOpen = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<FlowItemMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: FlowItemMessages;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * When `true`, displays a back button in the component's header.\n   *\n   * @internal\n   */\n  @Prop() showBackButton = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the back button is clicked.\n   */\n  @Event({ cancelable: true }) calciteFlowItemBack: EventEmitter<void>;\n\n  /**\n   * Fires when the content is scrolled.\n   */\n  @Event({ cancelable: false }) calciteFlowItemScroll: EventEmitter<void>;\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calciteFlowItemClose: EventEmitter<void>;\n\n  /**\n   * Fires when the collapse button is clicked.\n   */\n  @Event({ cancelable: false }) calciteFlowItemToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteFlowItemElement;\n\n  containerEl: HTMLCalcitePanelElement;\n\n  backButtonEl: HTMLCalciteActionElement;\n\n  @State() defaultMessages: FlowItemMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component.\n   *\n   * @returns promise.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    const { backButtonEl, containerEl } = this;\n\n    if (backButtonEl) {\n      return backButtonEl.setFocus();\n    } else if (containerEl) {\n      return containerEl.setFocus();\n    }\n  }\n\n  /**\n   * Scrolls the component's content to a specified set of coordinates.\n   *\n   * @example\n   * myCalciteFlowItem.scrollContentTo({\n   *   left: 0, // Specifies the number of pixels along the X axis to scroll the window or element.\n   *   top: 0, // Specifies the number of pixels along the Y axis to scroll the window or element\n   *   behavior: \"auto\" // Specifies whether the scrolling should animate smoothly (smooth), or happen instantly in a single jump (auto, the default value).\n   * });\n   * @param options - allows specific coordinates to be defined.\n   * @returns - promise that resolves once the content is scrolled to.\n   */\n  @Method()\n  async scrollContentTo(options?: ScrollToOptions): Promise<void> {\n    await this.containerEl?.scrollContentTo(options);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handlePanelScroll = (event: CustomEvent<void>): void => {\n    event.stopPropagation();\n    this.calciteFlowItemScroll.emit();\n  };\n\n  handlePanelClose = (event: CustomEvent<void>): void => {\n    event.stopPropagation();\n    this.calciteFlowItemClose.emit();\n  };\n\n  handlePanelToggle = (event: CustomEvent<void>): void => {\n    event.stopPropagation();\n    this.collapsed = (event.target as HTMLCalcitePanelElement).collapsed;\n    this.calciteFlowItemToggle.emit();\n  };\n\n  backButtonClick = (): void => {\n    this.calciteFlowItemBack.emit();\n  };\n\n  setBackRef = (node: HTMLCalciteActionElement): void => {\n    this.backButtonEl = node;\n  };\n\n  setContainerRef = (node: HTMLCalcitePanelElement): void => {\n    this.containerEl = node;\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderBackButton(): VNode {\n    const { el } = this;\n\n    const rtl = getElementDir(el) === \"rtl\";\n    const { showBackButton, backButtonClick, messages } = this;\n    const label = messages.back;\n    const icon = rtl ? ICONS.backRight : ICONS.backLeft;\n\n    return showBackButton ? (\n      <calcite-action\n        aria-label={label}\n        class={CSS.backButton}\n        icon={icon}\n        key=\"flow-back-button\"\n        onClick={backButtonClick}\n        scale=\"s\"\n        slot=\"header-actions-start\"\n        text={label}\n        title={label}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.setBackRef}\n      />\n    ) : null;\n  }\n\n  render(): VNode {\n    const {\n      collapsed,\n      collapseDirection,\n      collapsible,\n      closable,\n      closed,\n      description,\n      disabled,\n      heading,\n      headingLevel,\n      loading,\n      menuOpen,\n      messages,\n      overlayPositioning,\n    } = this;\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <calcite-panel\n            closable={closable}\n            closed={closed}\n            collapseDirection={collapseDirection}\n            collapsed={collapsed}\n            collapsible={collapsible}\n            description={description}\n            disabled={disabled}\n            heading={heading}\n            headingLevel={headingLevel}\n            loading={loading}\n            menuOpen={menuOpen}\n            messageOverrides={messages}\n            onCalcitePanelClose={this.handlePanelClose}\n            onCalcitePanelScroll={this.handlePanelScroll}\n            onCalcitePanelToggle={this.handlePanelToggle}\n            overlayPositioning={overlayPositioning}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.setContainerRef}\n          >\n            {this.renderBackButton()}\n            <slot name={SLOTS.actionBar} slot={PANEL_SLOTS.actionBar} />\n            <slot name={SLOTS.headerActionsStart} slot={PANEL_SLOTS.headerActionsStart} />\n            <slot name={SLOTS.headerActionsEnd} slot={PANEL_SLOTS.headerActionsEnd} />\n            <slot name={SLOTS.headerContent} slot={PANEL_SLOTS.headerContent} />\n            <slot name={SLOTS.headerMenuActions} slot={PANEL_SLOTS.headerMenuActions} />\n            <slot name={SLOTS.fab} slot={PANEL_SLOTS.fab} />\n            <slot name={SLOTS.footerActions} slot={PANEL_SLOTS.footerActions} />\n            <slot name={SLOTS.footer} slot={PANEL_SLOTS.footer} />\n            <slot />\n          </calcite-panel>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-flow-item-footer-padding: Specifies the padding of the component's footer.\n * @prop --calcite-flow-item-header-border-block-end: Specifies the component header's block end border.\n */\n\n:host {\n  @extend %component-host;\n  @apply relative flex w-full flex-auto overflow-hidden;\n}\n\n@include disabled();\n\n.back-button {\n  @apply border-color-3\n  border-0\n  border-solid;\n  border-inline-end-width: theme(\"borderWidth.DEFAULT\");\n}\n\ncalcite-panel {\n  --calcite-panel-footer-padding: var(--calcite-flow-item-footer-padding);\n  --calcite-panel-header-border-block-end: var(--calcite-flow-item-header-border-block-end);\n}\n\n@include base-component();\n","export const CSS = {\n  scrim: \"scrim\",\n  content: \"content\",\n};\n\nexport const BREAKPOINTS = {\n  s: 72, // Less than 72px.\n  // medium is assumed default.\n  l: 480, // Greater than or equal to 480px.\n};\n","import { Component, Element, h, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { slotChangeHasContent } from \"../../utils/dom\";\nimport { CSS, BREAKPOINTS } from \"./resources\";\nimport { ScrimMessages } from \"./assets/scrim/t9n\";\n\n/**\n * @slot - A slot for adding custom content, primarily loading information.\n */\n@Component({\n  tag: \"calcite-scrim\",\n  styleUrl: \"scrim.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Scrim implements LocalizedComponent, T9nComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ScrimMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ScrimMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteScrimElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.handleResize());\n\n  loaderEl: HTMLCalciteLoaderElement;\n\n  @State() loaderScale: Scale;\n\n  @State() defaultMessages: ScrimMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() hasContent = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.resizeObserver?.observe(this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Method\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { hasContent, loading, messages } = this;\n\n    return (\n      <div class={CSS.scrim}>\n        {loading ? (\n          <calcite-loader\n            label={messages.loading}\n            scale={this.loaderScale}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.storeLoaderEl}\n          />\n        ) : null}\n        <div class={CSS.content} hidden={!hasContent}>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </div>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.hasContent = slotChangeHasContent(event);\n  };\n\n  private storeLoaderEl = (el: HTMLCalciteLoaderElement): void => {\n    this.loaderEl = el;\n    this.handleResize();\n  };\n\n  private getScale(size: number): Scale {\n    if (size < BREAKPOINTS.s) {\n      return \"s\";\n    } else if (size >= BREAKPOINTS.l) {\n      return \"l\";\n    } else {\n      return \"m\";\n    }\n  }\n\n  private handleResize(): void {\n    const { loaderEl, el } = this;\n\n    if (!loaderEl) {\n      return;\n    }\n\n    this.loaderScale = this.getScale(Math.min(el.clientHeight, el.clientWidth) ?? 0);\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-scrim-background: Specifies the background color of the scrim.\n */\n:host {\n  --calcite-scrim-background: var(--calcite-color-transparent-scrim);\n}\n\n:host {\n  @apply absolute\n  inset-0\n  z-overlay\n  flex\n  h-full\n  w-full\n  flex-col\n  items-stretch;\n}\n\n@keyframes calcite-scrim-fade-in {\n  0% {\n    @apply bg-opacity-0;\n  }\n  100% {\n    @apply text-opacity-100;\n  }\n}\n\n.scrim {\n  @apply absolute\n  inset-0\n  flex\n  flex-col\n  content-center\n  items-center\n  justify-center\n  overflow-hidden;\n  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;\n  background-color: var(--calcite-scrim-background, var(--calcite-color-transparent-scrim));\n}\n\n.content {\n  @apply p-4;\n}\n\n@include base-component();\n"],"names":["CSS","ICONS","SLOTS","Panel","proxyCustomElement","HTMLElement","resizeObserver","createObserver","this","resizeHandler","panelScrollEl","scrollHeight","offsetHeight","tabIndex","setContainerRef","node","containerEl","panelKeyDownHandler","event","closable","key","defaultPrevented","close","preventDefault","closed","calcitePanelClose","emit","collapse","collapsed","calcitePanelToggle","panelScrollHandler","calcitePanelScroll","handleHeaderActionsStartSlotChange","hasStartActions","slotChangeHasAssignedElement","handleHeaderActionsEndSlotChange","hasEndActions","handleHeaderMenuActionsSlotChange","hasMenuItems","handleActionBarSlotChange","actionBars","slotChangeGetAssignedElements","filter","el","matches","forEach","actionBar","layout","hasActionBar","length","handleHeaderContentSlotChange","hasHeaderContent","handleFooterSlotChange","hasFooterContent","handleFooterActionsSlotChange","hasFooterActions","handleFabSlotChange","hasFab","setPanelScrollEl","_this$resizeObserver","_this$resizeObserver2","disconnect","observe","onMessagesChange","connectedCallback","connectInteractive","connectLocalized","connectMessages","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","_this$resizeObserver3","disconnectInteractive","disconnectLocalized","disconnectMessages","effectiveLocaleChange","updateMessages","effectiveLocale","setFocus","componentFocusable","focusFirstTabbable","scrollContentTo","options","_this$panelScrollEl","scrollTo","renderHeaderContent","heading","headingLevel","description","headingNode","h","Heading","class","level","descriptionNode","renderActionBar","hidden","name","onSlotchange","renderHeaderSlottedContent","renderHeaderStartActions","renderHeaderActionsEnd","messages","collapseDirection","collapsible","expand","icons","reverse","collapseNode","toAriaBoolean","icon","onClick","text","title","closeNode","slotNode","showContainer","renderMenu","menuOpen","flipPlacements","label","open","overlayPositioning","placement","slot","SLOTS$1","trigger","renderHeaderNode","headerContentNode","showHeaderContent","renderFooterNode","showFooter","renderContent","onScroll","ref","renderFab","render","disabled","loading","panelNode","Host","onKeyDown","InteractiveContainer","FlowItem","handlePanelScroll","stopPropagation","calciteFlowItemScroll","handlePanelClose","calciteFlowItemClose","handlePanelToggle","target","calciteFlowItemToggle","backButtonClick","calciteFlowItemBack","setBackRef","backButtonEl","_this$containerEl","renderBackButton","rtl","getElementDir","showBackButton","back","scale","messageOverrides","onCalcitePanelClose","onCalcitePanelScroll","onCalcitePanelToggle","BREAKPOINTS","Scrim","handleResize","handleDefaultSlotChange","hasContent","slotChangeHasContent","storeLoaderEl","loaderEl","loaderScale","getScale","size","_Math$min","Math","min","clientHeight","clientWidth"],"sourceRoot":""}